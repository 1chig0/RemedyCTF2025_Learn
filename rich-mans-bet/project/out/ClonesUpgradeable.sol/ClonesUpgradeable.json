{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220775f8fb3ba902ed30525a085e6358aeb3d9da474807f367805efc0ffeb19355064736f6c634300081c0033","sourceMap":"755:3292:86:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:3292:86;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220775f8fb3ba902ed30525a085e6358aeb3d9da474807f367805efc0ffeb19355064736f6c634300081c0033","sourceMap":"755:3292:86:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/openzeppelin-contracts-upgradeable/proxy/ClonesUpgradeable.sol\":\"ClonesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-ctf/=lib/forge-ctf/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/openzeppelin-contracts-upgradeable/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0xc43e6a7d186cdbeb31f332a959fe6ea040937670251ec1740fd31c9c77c3977b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f99ecacad37ae5d4f887ae59045532fa7b1d2139ae0b223b3c055000c0e637d\",\"dweb:/ipfs/QmYkfqSMwFkTLdjMbJKFZgT7JKZap9ZgZZRSdF2Js1WkYc\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","forge-ctf/=lib/forge-ctf/src/","forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/openzeppelin-contracts-upgradeable/proxy/ClonesUpgradeable.sol":"ClonesUpgradeable"},"evmVersion":"paris","libraries":{}},"sources":{"src/openzeppelin-contracts-upgradeable/proxy/ClonesUpgradeable.sol":{"keccak256":"0xc43e6a7d186cdbeb31f332a959fe6ea040937670251ec1740fd31c9c77c3977b","urls":["bzz-raw://9f99ecacad37ae5d4f887ae59045532fa7b1d2139ae0b223b3c055000c0e637d","dweb:/ipfs/QmYkfqSMwFkTLdjMbJKFZgT7JKZap9ZgZZRSdF2Js1WkYc"],"license":"MIT"}},"version":1},"id":86}